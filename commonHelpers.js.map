{"version":3,"file":"commonHelpers.js","sources":["../src/js/refs.js","../src/js/pixabay-api.js","../src/js/render-functions.js","../src/js/onFormSubmit.js","../src/main.js"],"sourcesContent":["export const refs = {\n    form: document.querySelector(\".form\"),\n    input: document.querySelector(\"#user-input\"),\n    button: document.querySelector(\".search-button\"),\n    gallery: document.querySelector(\".gallery\"),\n}","export function pixabayApi(userText) {\n    const API_KEY = \"42305784-5d55228baaa9a6392a5b2668b\";\n    const URL = \"https://pixabay.com/api/?key=\" + API_KEY + \"&q=\" + userText + \"&image_type=photo&orientation=horizontal&safesearch=true\";\n    return fetch(URL).then(res=>res.json());\n}","import iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\nimport { refs } from \"./refs\";\n\n\n\nexport function checkFunction(userData) {\n    const userArray = userData.hits;\n    if (userArray.length === 0) {\n        iziToast.error({\n            message: \"Sorry, there are no images matching your search query. Please try again!\",\n            position: \"topRight\",\n        });\n    } else {\n        renderFunction(userArray);\n    }\n};\n\nfunction renderFunction(userArray) {\n    const markup = userArray.map(({ webformatURL, largeImageURL, tags, likes, views, comments, downloads }) => {\n        return `<li class=\"gallery-item\">\n        <a href=\"${webformatURL}\">\n            <img src=\"${webformatURL}\" alt=\"${tags}\" title=\"${tags}\"/>\n            <ul>\n        <li>\n          <h3>Likes</h3>\n          <p>${likes}</p>\n        </li>\n        <li>\n          <h3>Vievs</h3>\n          <p>${views}</p>\n        </li>\n        <li>\n          <h3>Comments</h3>\n          <p>${comments}</p>\n        </li>\n        <li>\n          <h3>Downloads</h3>\n          <p>${downloads}</p>\n        </li>\n      </ul>\n        </a></li>`\n    }).join(\"\");\n    refs.gallery.innerHTML = markup;\n};","import { refs } from \"./refs\";\nimport { pixabayApi } from \"./pixabay-api\";\nimport { checkFunction } from \"./render-functions\";\n\nexport function onFormSubmit(event) {\n    event.preventDefault();\n    refs.gallery.innerHTML = \"\";\n    const userText = refs.input.value.trim();\n    if (userText !== \"\") {\n        pixabayApi(userText).then(checkFunction);\n    };\n}","import { refs } from \"./js/refs\";\nimport { onFormSubmit } from \"./js/onFormSubmit\";\n\n\nrefs.form.addEventListener(\"submit\", onFormSubmit);\n"],"names":["refs","pixabayApi","userText","URL","res","checkFunction","userData","userArray","iziToast","renderFunction","markup","webformatURL","largeImageURL","tags","likes","views","comments","downloads","onFormSubmit","event"],"mappings":"svBAAO,MAAMA,EAAO,CAChB,KAAM,SAAS,cAAc,OAAO,EACpC,MAAO,SAAS,cAAc,aAAa,EAC3C,OAAQ,SAAS,cAAc,gBAAgB,EAC/C,QAAS,SAAS,cAAc,UAAU,CAC9C,ECLO,SAASC,EAAWC,EAAU,CAEjC,MAAMC,EAAM,gCADI,qCACwC,MAAQD,EAAW,2DAC3E,OAAO,MAAMC,CAAG,EAAE,KAAKC,GAAKA,EAAI,KAAI,CAAE,CAC1C,CCEO,SAASC,EAAcC,EAAU,CACpC,MAAMC,EAAYD,EAAS,KACvBC,EAAU,SAAW,EACrBC,EAAS,MAAM,CACX,QAAS,2EACT,SAAU,UACtB,CAAS,EAEDC,EAAeF,CAAS,CAEhC,CAEA,SAASE,EAAeF,EAAW,CAC/B,MAAMG,EAASH,EAAU,IAAI,CAAC,CAAE,aAAAI,EAAc,cAAAC,EAAe,KAAAC,EAAM,MAAAC,EAAO,MAAAC,EAAO,SAAAC,EAAU,UAAAC,CAAS,IACzF;AAAA,mBACIN,CAAY;AAAA,wBACPA,CAAY,UAAUE,CAAI,YAAYA,CAAI;AAAA;AAAA;AAAA;AAAA,eAInDC,CAAK;AAAA;AAAA;AAAA;AAAA,eAILC,CAAK;AAAA;AAAA;AAAA;AAAA,eAILC,CAAQ;AAAA;AAAA;AAAA;AAAA,eAIRC,CAAS;AAAA;AAAA;AAAA,kBAInB,EAAE,KAAK,EAAE,EACVjB,EAAK,QAAQ,UAAYU,CAC7B,CCxCO,SAASQ,EAAaC,EAAO,CAChCA,EAAM,eAAc,EACpBnB,EAAK,QAAQ,UAAY,GACzB,MAAME,EAAWF,EAAK,MAAM,MAAM,KAAI,EAClCE,IAAa,IACbD,EAAWC,CAAQ,EAAE,KAAKG,CAAa,CAE/C,CCPAL,EAAK,KAAK,iBAAiB,SAAUkB,CAAY"}